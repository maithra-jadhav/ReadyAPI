<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9480f76a-3195-4d72-9d4c-65576f699f54" created="2.6.0" activeEnvironment="Default environment" name="Kainga Ora REST Project" updated="2.6.0" encryptionMode="Not encrypted" resourceRoot="${projectDir}" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="9480f76a-3195-4d72-9d4c-65576f699f54fileName">Kainga-Ora-REST-Project1</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:endpointStrategy xsi:type="con:DefaultEndpointStrategy" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:endpoint mode="COMPLEMENT" username="KIMBER" password="">http://deng-vordel01.hnz.co.nz:22100</con:endpoint>
  </con:endpointStrategy>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer>
    <con:databaseConnection>
      <con:name>Kotahi</con:name>
      <con:driver>oracle.jdbc.driver.OracleDriver</con:driver>
      <con:connectionString>jdbc:oracle:thin:configuration/PASS_VALUE@exa-orb-scan.hnz.co.nz:1521:houtestc1</con:connectionString>
      <con:password>password99</con:password>
      <con:connectionProperties/>
    </con:databaseConnection>
  </con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
